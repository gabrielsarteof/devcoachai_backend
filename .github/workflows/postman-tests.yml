name: API Tests (Postman/Newman)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20.x'
  NEWMAN_VERSION: 'latest'

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devcoachai_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗄️ Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/devcoachai_test
        run: |
          npx prisma migrate deploy
          npx prisma db seed

      - name: 🚀 Start API server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/devcoachai_test
          JWT_SECRET: test-secret-key-for-ci-with-32-chars-minimum
          JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-with-32-chars
          NODE_ENV: test
          PORT: 3333
          REDIS_URL: redis://localhost:6379
        run: |
          npm run dev &
          echo $! > server.pid
          # Wait for server to be ready
          npx wait-on http://localhost:3333/health -t 30000

      - name: 📥 Install Newman
        run: npm install -g newman newman-reporter-htmlextra

      - name: 🧪 Run All Tests Collection
        run: |
          newman run .postman/collections/all-tests-collection.json \
            -e .postman/environments/global-environment.json \
            --env-var "baseUrl=http://localhost:3333" \
            --reporters cli,json,htmlextra \
            --reporter-json-export ./newman/report.json \
            --reporter-htmlextra-export ./newman/report.html \
            --color on \
            --bail \
            --verbose

      - name: 🧪 Run Auth Module Tests
        if: success() || failure()
        run: |
          newman run .postman/collections/auth-collection.json \
            -e .postman/environments/global-environment.json \
            --env-var "baseUrl=http://localhost:3333" \
            --reporters cli,json \
            --reporter-json-export ./newman/auth-report.json \
            --color on

      - name: 🧪 Run Challenges Module Tests
        if: success() || failure()
        run: |
          newman run .postman/collections/challenges-collection.json \
            -e .postman/environments/global-environment.json \
            --env-var "baseUrl=http://localhost:3333" \
            --reporters cli,json \
            --reporter-json-export ./newman/challenges-report.json \
            --color on

      - name: 🧪 Run Metrics Module Tests
        if: success() || failure()
        run: |
          newman run .postman/collections/metrics-collection.json \
            -e .postman/environments/global-environment.json \
            --env-var "baseUrl=http://localhost:3333" \
            --reporters cli,json \
            --reporter-json-export ./newman/metrics-report.json \
            --color on

      - name: 🧪 Run AI Module Tests
        if: success() || failure()
        run: |
          # Check if AI API keys are available
          if [ -z "$OPENAI_API_KEY" ] && [ -z "$ANTHROPIC_API_KEY" ]; then
            echo "⏭️ Skipping AI tests - No API keys configured (expected in CI)"
            echo "💡 AI tests run locally when API keys are present in .env"
            # Create empty report file for consistency
            echo '{"run":{"stats":{"requests":{"total":0,"pending":0,"failed":0},"assertions":{"total":0,"pending":0,"failed":0}}}}' > ./newman/ai-report.json
          else
            echo "🤖 Running AI tests with available API keys"
            newman run .postman/collections/ai-collection.json \
              -e .postman/environments/global-environment.json \
              --env-var "baseUrl=http://localhost:3333" \
              --reporters cli,json \
              --reporter-json-export ./newman/ai-report.json \
              --color on
          fi

      - name: 📊 Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: newman-reports
          path: ./newman/
          retention-days: 30

      - name: 📊 Generate Test Summary
        if: always()
        run: |
          echo "# 📊 API Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f ./newman/report.json ]; then
            echo "## All Tests Collection" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat ./newman/report.json | jq '.run.stats' >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "## Test Reports Available" >> $GITHUB_STEP_SUMMARY
          echo "- Download the artifacts to view detailed HTML reports" >> $GITHUB_STEP_SUMMARY
          echo "- Check the 'Artifacts' section below" >> $GITHUB_STEP_SUMMARY

      - name: 🛑 Stop API server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: ❌ Fail if tests failed
        if: failure()
        run: exit 1
